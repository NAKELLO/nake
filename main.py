import asyncio
import logging
import json
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –¢–æ–∫–µ–Ω –º–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑
API_TOKEN = '7748542247:AAEPCvB-3EFngPPv45SvBG_Nizh0qQmpwB4'  # –°—ñ–∑–¥—ñ“£ —Ç–æ–∫–µ–Ω—ñ“£—ñ–∑
ADMIN_ID = 6927494520  # –°—ñ–∑–¥—ñ“£ Telegram –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã“£—ã–∑

# –õ–æ–≥ –∂–∞–∑—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Å—ã
logging.basicConfig(level=logging.INFO)

# –ë–æ—Ç –ø–µ–Ω –¥–∏—Å–ø–µ—Ç—á–µ—Ä–¥—ñ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è–ª–∞—É
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –§–∞–π–ª–¥–∞—Ä
USERS_FILE = 'users.json'
KIDS_VIDEOS_FILE = 'kids_videos.json'
PHOTOS_FILE = 'photos.json'

# JSON —Ñ–∞–π–ª–¥–∞–Ω –¥–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ –∂“Ø–∫—Ç–µ—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
def load_json(file):
    try:
        if not os.path.exists(file):
            return {}
        with open(file, 'r') as f:
            return json.load(f)
    except json.JSONDecodeError:
        logging.error(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON –≤ —Ñ–∞–π–ª–µ {file}.")
        return {}
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ {file}: {e}")
        return {}

# JSON —Ñ–∞–π–ª“ì–∞ –¥–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ —Å–∞“õ—Ç–∞—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
def save_json(file, data):
    with open(file, 'w') as f:
        json.dump(data, f, indent=2)

# “ö–æ–ª–¥–∞–Ω—É—à—ã–Ω—ã —Ç—ñ—Ä–∫–µ—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
def register_user(user_id):
    users_data = load_json(USERS_FILE)
    if str(user_id) not in users_data:
        users_data[str(user_id)] = {"bonus": 0, "referral_link": f"https://t.me/your_bot?start={user_id}"}
        save_json(USERS_FILE, users_data)

# –ë–æ—Ç—Ç—ã“£ —Å—Ç–∞—Ä—Ç –∫–æ–º–∞–Ω–¥–∞—Å—ã–Ω ”©“£–¥–µ—É
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    register_user(message.from_user.id)
    
    keyboard = ReplyKeyboardMarkup(resize_keyboard=True)
    keyboard.add(KeyboardButton("üë∂ –î–µ—Ç—Å–∫–∏–π"))
    keyboard.add(KeyboardButton("üéÅ –ë–æ–Ω—É—Å"))
    keyboard.add(KeyboardButton("üíé VIP “õ–æ–ª–∂–µ—Ç—ñ–º–¥—ñ–ª—ñ–∫"))
    if message.from_user.id == ADMIN_ID:
        keyboard.add(KeyboardButton("üì¢ –•–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—É"))
        keyboard.add(KeyboardButton("üë• “ö–æ–ª–¥–∞–Ω—É—à—ã–ª–∞—Ä —Å–∞–Ω—ã"))
    
    await message.reply("–ê—Ä–Ω–∞–ª–∞—Ä“ì–∞ —Ç—ñ—Ä–∫–µ–ª—É–¥—ñ —Å“±—Ä–∞–π–º—ã–∑.", reply_markup=keyboard)

# –î–µ—Ç—Å–∫–∏–π –≤–∏–¥–µ–æ–ª–∞—Ä–¥—ã –±–µ—Ä—É
@dp.message_handler(lambda message: message.text == "üë∂ –î–µ—Ç—Å–∫–∏–π")
async def send_kids_video(message: types.Message):
    user_data = load_json(USERS_FILE).get(str(message.from_user.id), {})
    bonus = user_data.get("bonus", 0)

    if message.from_user.id != ADMIN_ID and bonus < 6:
        await message.reply("üö´ –ë–æ–Ω—É—Å—Ç–∞—Ä—ã“£—ã–∑ –∂–µ—Ç–∫—ñ–ª—ñ–∫—Å—ñ–∑.")
        return

    # –í–∏–¥–µ–æ –∂—ñ–±–µ—Ä—É –ª–æ–≥–∏–∫–∞—Å—ã (–º—ã—Å–∞–ª—ã, —Ç—ñ–∑—ñ–º–Ω–µ–Ω)
    data = load_json(KIDS_VIDEOS_FILE)
    if data.get('all'):
        video_id = data['all'][0]  # –ë—ñ—Ä—ñ–Ω—à—ñ –≤–∏–¥–µ–æ–Ω—ã –∞–ª—É (–Ω–µ–º–µ—Å–µ –∫–µ–∑–¥–µ–π—Å–æ“õ)
        await bot.send_video(message.chat.id, video_id)

        if message.from_user.id != ADMIN_ID:
            user_data["bonus"] -= 6
            save_json(USERS_FILE, {str(message.from_user.id): user_data})
    else:
        await message.reply("‚ÑπÔ∏è –í–∏–¥–µ–æ –∂–æ“õ.")

# –ë–æ–Ω—É—Å—Ç–∞—Ä–¥—ã –∫”©—Ä—Å–µ—Ç—É
@dp.message_handler(lambda message: message.text == "üéÅ –ë–æ–Ω—É—Å")
async def show_bonus(message: types.Message):
    user_data = load_json(USERS_FILE).get(str(message.from_user.id), {})
    bonus = user_data.get("bonus", 0)
    referral_link = user_data.get("referral_link", "")
    await message.reply(f"–°—ñ–∑–¥—ñ“£ –±–æ–Ω—É—Å—ã“£—ã–∑: {bonus}\n–®–∞“õ—ã—Ä—É —Å—ñ–ª—Ç–µ–º–µ—Å—ñ: {referral_link}")

# VIP “õ–æ–ª–∂–µ—Ç—ñ–º–¥—ñ–ª—ñ–∫
@dp.message_handler(lambda message: message.text == "üíé VIP “õ–æ–ª–∂–µ—Ç—ñ–º–¥—ñ–ª—ñ–∫")
async def vip_access(message: types.Message):
    await message.reply("üíé VIP “õ–æ–ª–∂–µ—Ç—ñ–º–¥—ñ–ª—ñ–∫ —Ç–∞—Ä–∏—Ñ—Ç–µ—Ä—ñ:\n1. 100 –±–æ–Ω—É—Å - VIP “õ–æ–ª–∂–µ—Ç—ñ–º–¥—ñ–ª—ñ–∫.\n2. 500 –±–æ–Ω—É—Å - VIP “õ–æ–ª–∂–µ—Ç—ñ–º–¥—ñ–ª—ñ–∫ + –∞—Ä–Ω–∞–π—ã –∫–æ–Ω—Ç–µ–Ω—Ç.")

# –•–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—É
@dp.message_handler(lambda message: message.text == "üì¢ –•–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—É")
async def broadcast_message(message: types.Message):
    await message.reply("–•–∞–±–∞—Ä–ª–∞–º–∞“£—ã–∑–¥—ã –∂–∞–∑—ã“£—ã–∑.")
    await dp.current_state(user=message.from_user.id).set_state("broadcast")

@dp.message_handler(state="broadcast")
async def send_broadcast(message: types.Message):
    users_data = load_json(USERS_FILE)
    for user_id in users_data.keys():
        try:
            await bot.send_message(user_id, message.text)
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
    await message.reply("üì¢ –•–∞–±–∞—Ä–ª–∞–º–∞ –±–∞—Ä–ª—ã“õ “õ–æ–ª–¥–∞–Ω—É—à—ã–ª–∞—Ä“ì–∞ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ.")
    await dp.current_state(user=message.from_user.id).reset_state()

# “ö–æ–ª–¥–∞–Ω—É—à—ã–ª–∞—Ä —Å–∞–Ω—ã–Ω —à—ã“ì–∞—Ä—É
@dp.message_handler(lambda message: message.text == "üë• “ö–æ–ª–¥–∞–Ω—É—à—ã–ª–∞—Ä —Å–∞–Ω—ã")
async def count_users(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        users_data = load_json(USERS_FILE)
        user_count = len(users_data)
        await message.reply(f"“ö–æ–ª–¥–∞–Ω—É—à—ã–ª–∞—Ä —Å–∞–Ω—ã: {user_count}")
    else:
        await message.reply("üö´ –°—ñ–∑–¥–µ –±“±–ª ”ô—Ä–µ–∫–µ—Ç—Ç—ñ –æ—Ä—ã–Ω–¥–∞—É“ì–∞ —Ä“±“õ—Å–∞—Ç –∂–æ“õ.")

# –§–æ—Ç–æ “õ–∞–±—ã–ª–¥–∞—É
@dp.message_handler(content_types=types.ContentType.PHOTO)
async def save_photo(message: types.Message):
    if message.from_user.id == ADMIN_ID:
        photos_data = load_json(PHOTOS_FILE)
        photos_data['all'] = photos_data.get('all', [])
        photos_data['all'].append(message.photo[-1].file_id)
        save_json(PHOTOS_FILE, photos_data)
        await message.reply("‚úÖ –§–æ—Ç–æ —Å–∞“õ—Ç–∞–ª–¥—ã.")
    else:
        await message.reply("üö´ –°—ñ–∑–¥–µ –±“±–ª ”ô—Ä–µ–∫–µ—Ç—Ç—ñ –æ—Ä—ã–Ω–¥–∞—É“ì–∞ —Ä“±“õ—Å–∞—Ç –∂–æ“õ.")

# –í–∏–¥–µ–æ “õ–∞–±—ã–ª–¥–∞—É
@dp.message_handler(content_types=types.ContentType.VIDEO)
async def save_video(message: types.Message):
    is_admin = message.from_user.id == ADMIN_ID or (message.forward_from and message.forward_from.id == ADMIN_ID)
    
    if is_admin:
        data = load_json(KIDS_VIDEOS_FILE)
        file_id = message.video.file_id
        if file_id not in data.get('all', []):
            data.setdefault('all', []).append(file_id)
            save_json(KIDS_VIDEOS_FILE, data)
            await message.reply("‚úÖ –í–∏–¥–µ–æ —Å–∞“õ—Ç–∞–ª–¥—ã.")
        else:
            await message.reply("‚ÑπÔ∏è –ë“±–ª –≤–∏–¥–µ–æ –±“±—Ä—ã–Ω–Ω–∞–Ω –±–∞—Ä.")
    else:
        await message.reply("üö´ –°—ñ–∑–¥–µ –±“±–ª ”ô—Ä–µ–∫–µ—Ç—Ç—ñ –æ—Ä—ã–Ω–¥–∞—É“ì–∞ —Ä“±“õ—Å–∞—Ç –∂–æ“õ.")

# –ë–æ—Ç—Ç—ã —ñ—Å–∫–µ “õ–æ—Å—É
if __name__ == '__main__':
    print("ü§ñ –ë–æ—Ç —ñ—Å–∫–µ “õ–æ—Å—ã–ª–¥—ã!")
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
