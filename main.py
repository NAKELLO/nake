import asyncio
import logging
import json
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton

# –¢–æ–∫–µ–Ω –º–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã–Ω –µ–Ω–≥—ñ–∑—ñ“£—ñ–∑
API_TOKEN = '7748542247:AAEPCvB-3EFngPPv45SvBG_Nizh0qQmpwB4'  # –°—ñ–∑–¥—ñ“£ —Ç–æ–∫–µ–Ω—ñ“£—ñ–∑
ADMIN_ID = 6927494520  # –°—ñ–∑–¥—ñ“£ Telegram –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—ã“£—ã–∑

# –õ–æ–≥ –∂–∞–∑—É –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è—Å—ã
logging.basicConfig(level=logging.INFO)

# –ë–æ—Ç –ø–µ–Ω –¥–∏—Å–ø–µ—Ç—á–µ—Ä–¥—ñ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è–ª–∞—É
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)

# –§–∞–π–ª–¥–∞—Ä
KIDS_VIDEOS_FILE = 'kids_videos.json'

# JSON —Ñ–∞–π–ª–¥–∞–Ω –¥–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ –∂“Ø–∫—Ç–µ—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
def load_json(file):
    try:
        if not os.path.exists(file):
            return {"all": []}
        with open(file, 'r') as f:
            return json.load(f)
    except json.JSONDecodeError:
        logging.error(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON –≤ —Ñ–∞–π–ª–µ {file}.")
        return {}
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞ {file}: {e}")
        return {}

# JSON —Ñ–∞–π–ª“ì–∞ –¥–µ—Ä–µ–∫—Ç–µ—Ä–¥—ñ —Å–∞“õ—Ç–∞—É —Ñ—É–Ω–∫—Ü–∏—è—Å—ã
def save_json(file, data):
    with open(file, 'w') as f:
        json.dump(data, f, indent=2)

# –í–∏–¥–µ–æ —Å–∞“õ—Ç–∞–π—Ç—ã–Ω —Ö—ç–Ω–¥–ª–µ—Ä
@dp.message_handler(content_types=types.ContentType.VIDEO)
async def save_kids_video(message: types.Message):
    # –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —Ç–µ–∫—Å–µ—Ä—ñ—Å—ñ
    is_admin = (
        message.from_user.id == ADMIN_ID or
        (message.forward_from and message.forward_from.id == ADMIN_ID) or
        (message.forward_from_chat and message.forward_from_chat.type == 'channel') or
        (message.sender_chat and message.sender_chat.type == 'channel')
    )

    if is_admin:
        data = load_json(KIDS_VIDEOS_FILE)
        file_id = message.video.file_id
        if file_id not in data['all']:
            data['all'].append(file_id)
            save_json(KIDS_VIDEOS_FILE, data)
            await message.reply("‚úÖ –î–µ—Ç—Å–∫–∏–π –≤–∏–¥–µ–æ —Å–∞“õ—Ç–∞–ª–¥—ã.")
        else:
            await message.reply("‚ÑπÔ∏è –ë“±–ª –≤–∏–¥–µ–æ –±“±—Ä—ã–Ω–Ω–∞–Ω –±–∞—Ä.")
    else:
        await message.reply("üö´ –°—ñ–∑–¥–µ –±“±–ª ”ô—Ä–µ–∫–µ—Ç—Ç—ñ –æ—Ä—ã–Ω–¥–∞—É“ì–∞ —Ä“±“õ—Å–∞—Ç –∂–æ“õ.")

# –ë–æ—Ç—Ç—ã“£ —Å—Ç–∞—Ä—Ç –∫–æ–º–∞–Ω–¥–∞—Å—ã–Ω ”©“£–¥–µ—É
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.reply("ü§ñ –ë–æ—Ç —ñ—Å–∫–µ “õ–æ—Å—ã–ª–¥—ã! –°—ñ–∑–≥–µ “õ–∞–ª–∞–π –∫”©–º–µ–∫—Ç–µ—Å–µ –∞–ª–∞–º—ã–Ω?")

# –ë–æ—Ç—Ç—ã —ñ—Å–∫–µ “õ–æ—Å—É
if __name__ == '__main__':
    print("ü§ñ –ë–æ—Ç —ñ—Å–∫–µ “õ–æ—Å—ã–ª–¥—ã!")
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
