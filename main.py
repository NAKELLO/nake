from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
import json, os, logging

API_TOKEN = '7748542247:AAFvfLMx25tohG6eOjnyEYXueC0FDFUJXxE'
ADMIN_ID = 6927494520
BOT_USERNAME = 'Darvinuyatszdaribot'

# –ö–∞–Ω–∞–ª–¥–∞—Ä —Ç—ñ–∑—ñ–º—ñ
CHANNELS = ['@Gey_Angime', '@Qazhuboyndar', '@oqigalaruyatsiz']

bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)

USERS_FILE = 'users.json'
BONUS_FILE = 'bonus.json'
PHOTOS_FILE = 'photos.json'
VIDEOS_FILE = 'videos.json'
KIDS_VIDEOS_FILE = 'kids_videos.json'

admin_waiting_broadcast = {}

def load_json(file):
    if not os.path.exists(file):
        return {}
    with open(file, 'r') as f:
        try:
            return json.load(f)
        except:
            return {}

def save_json(file, data):
    with open(file, 'w') as f:
        json.dump(data, f, indent=2)

async def check_subscription(user_id):
    for channel in CHANNELS:
        try:
            member = await bot.get_chat_member(channel, user_id)
            if member.status not in ["member", "administrator", "creator"]:
                return False
        except:
            return False
    return True

@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    if message.chat.type != 'private':
        return

    # ‚õî –ó–∞“£ —Ç“±–ª“ì–∞–ª–∞—Ä—ã–Ω —Å“Ø–∑–≥—ñ–¥–µ–Ω ”©—Ç–∫—ñ–∑—É
    bad_keywords = ['police', 'gov', '–¥–µ–ø—É—Ç–∞—Ç', '—Å—É–¥', '–ø—Ä–æ–∫—É—Ä–∞—Ç—É—Ä–∞', 'din', 'mzrk', 'minjust']
    username = (message.from_user.username or '').lower()
    fullname = (message.from_user.full_name or '').lower()

    for word in bad_keywords:
        if word in username or word in fullname:
            return  # –±–æ—Ç “Ø–Ω–¥–µ–º–µ–π–¥—ñ

    user_id = str(message.from_user.id)
    users = load_json(USERS_FILE)
    bonus = load_json(BONUS_FILE)

    # —Ç–µ–∫ –∂–∞“£–∞ “õ–æ–ª–¥–∞–Ω—É—à—ã –±–æ–ª—Å–∞ “ì–∞–Ω–∞ —Ç—ñ—Ä–∫–µ–ª—É–¥—ñ —Å“±—Ä–∞–π–º—ã–∑
    if user_id not in users:
        is_subscribed = await check_subscription(message.from_user.id)
        if not is_subscribed:
            links = "\n".join([f"üëâ {c}" for c in CHANNELS])
            await message.answer(f"üìõ –ë–æ—Ç—Ç—ã “õ–æ–ª–¥–∞–Ω—É “Ø—à—ñ–Ω –∫–µ–ª–µ—Å—ñ –∞—Ä–Ω–∞–ª–∞—Ä“ì–∞ —Ç—ñ—Ä–∫–µ–ª—ñ“£—ñ–∑:\n\n{links}\n\n‚úÖ –¢—ñ—Ä–∫–µ–ª–≥–µ–Ω —Å–æ“£ /start –¥–µ–ø “õ–∞–π—Ç–∞ –∂–∞–∑—ã“£—ã–∑.")
            return

        users[user_id] = {"videos": 0, "photos": 0, "kids": 0, "invited": []}
        bonus[user_id] = 2

        if message.get_args():
            ref_id = message.get_args()
            if ref_id != user_id and ref_id in users and user_id not in users[ref_id]['invited']:
                users[ref_id]['invited'].append(user_id)
                bonus[ref_id] += 2
                try:
                    await bot.send_message(ref_id, "üéâ –°—ñ–∑–≥–µ 2 –±–æ–Ω—É—Å “õ–æ—Å—ã–ª–¥—ã!")
                except:
                    pass

        save_json(USERS_FILE, users)
        save_json(BONUS_FILE, bonus)

    kb = ReplyKeyboardMarkup(resize_keyboard=True)
    kb.add(KeyboardButton("üé• –í–∏–¥–µ–æ"), KeyboardButton("üñº –§–æ—Ç–æ"))
    kb.add(KeyboardButton("üë∂ –î–µ—Ç—Å–∫–∏–π"), KeyboardButton("üéÅ –ë–æ–Ω—É—Å"))
    if message.from_user.id == ADMIN_ID:
        kb.add(KeyboardButton("üì¢ –•–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—É"), KeyboardButton("üë• “ö–æ–ª–¥–∞–Ω—É—à—ã–ª–∞—Ä —Å–∞–Ω—ã"))

    await message.answer("“ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑!", reply_markup=kb)

# “õ–∞–ª“ì–∞–Ω –∫–æ–¥ ”©–∑–≥–µ—Ä–º–µ–π–¥—ñ
