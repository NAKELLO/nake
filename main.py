import telebot
from telebot import types
import json
import os

# –ë–æ—Ç —Ç–æ–∫–µ–Ω –º–µ–Ω –∞–¥–º–∏–Ω ID
TOKEN = '7748542247:AAH_y9C_LPTHDp74WNHN4HZHLpl-NuB-13s'
ADMIN_ID = 6927494520

# –ö–∞–Ω–∞–ª–¥–∞—Ä
CHANNELS = ['@Gey_Angime', '@Qazhuboyndar']

bot = telebot.TeleBot(TOKEN)

# –§–∞–π–ª –∂–æ–ª–¥–∞—Ä—ã
USERS_FILE = 'users.json'
PHOTOS_FILE = 'photos.json'
VIDEOS_FILE = 'videos.json'
BONUS_FILE = 'bonus.json'

# JSON –∂“Ø–∫—Ç–µ—É/—Å–∞“õ—Ç–∞—É
def load_json(file):
    if not os.path.exists(file):
        with open(file, 'w') as f:
            json.dump({}, f)
    with open(file, 'r') as f:
        try:
            return json.load(f)
        except:
            return {}

def save_json(file, data):
    with open(file, 'w') as f:
        json.dump(data, f, indent=2)

# –¢—ñ—Ä–∫–µ–ª—É —Ç–µ–∫—Å–µ—Ä—ñ—Å—ñ
def is_subscribed(user_id):
    for channel in CHANNELS:
        try:
            member = bot.get_chat_member(channel, user_id)
            if member.status not in ['member', 'administrator', 'creator']:
                return False
        except:
            return False
    return True

# /start
@bot.message_handler(commands=['start'])
def start(message):
    user_id = str(message.from_user.id)

    if not is_subscribed(message.from_user.id):
        join_links = "\n".join([f"üëâ {link}" for link in CHANNELS])
        bot.send_message(
            message.chat.id,
            f"üö´ –ë–æ—Ç—Ç—ã “õ–æ–ª–¥–∞–Ω—É “Ø—à—ñ–Ω –º—ã–Ω–∞ –∫–∞–Ω–∞–ª–¥–∞—Ä“ì–∞ —Ç—ñ—Ä–∫–µ–ª—ñ“£—ñ–∑:\n\n{join_links}\n\n–¢—ñ—Ä–∫–µ–ª—ñ–ø –±–æ–ª“ì–∞–Ω —Å–æ“£ /start –¥–µ–ø “õ–∞–π—Ç–∞ –∂–∞–∑—ã“£—ã–∑."
        )
        return

    users = load_json(USERS_FILE)
    bonus = load_json(BONUS_FILE)

    if user_id not in users:
        users[user_id] = {
            'videos': 0,
            'photos': 0,
            'invited': [],
            'invited_bonus_given': False
        }
        bonus[user_id] = 0

        # –†–µ—Ñ–µ—Ä–∞–ª –∫–æ–¥—ã –∞—Ä“õ—ã–ª—ã –∫—ñ—Ä—Å–µ
        if message.text.startswith('/start ') and len(message.text.split()) == 2:
            ref_id = message.text.split()[1]
            if ref_id != user_id and ref_id in users:
                if user_id not in users[ref_id]['invited']:
                    users[ref_id]['invited'].append(user_id)
                    bonus[ref_id] += 2
                    bot.send_message(ref_id, 'üéâ –°—ñ–∑–≥–µ 2 –±–æ–Ω—É—Å “õ–æ—Å—ã–ª–¥—ã!')

    save_json(USERS_FILE, users)
    save_json(BONUS_FILE, bonus)

    # –¢“Ø–π–º–µ–ª–µ—Ä
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.add('üé• –í–∏–¥–µ–æ', 'üñº –§–æ—Ç–æ', 'üéÅ –ë–æ–Ω—É—Å', 'üõí –°–∞—Ç—ã–ø –∞–ª—É')
    if message.from_user.id == ADMIN_ID:
        markup.add('üì¢ –•–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—É')

    bot.send_message(message.chat.id, "“ö–æ—à –∫–µ–ª–¥—ñ“£—ñ–∑!", reply_markup=markup)

# –í–∏–¥–µ–æ
@bot.message_handler(func=lambda m: m.text == 'üé• –í–∏–¥–µ–æ')
def send_video(message):
    user_id = str(message.from_user.id)
    videos = load_json(VIDEOS_FILE)
    users = load_json(USERS_FILE)
    bonus = load_json(BONUS_FILE)

    video_list = videos.get('all', [])
    index = users[user_id]['videos'] % len(video_list) if video_list else 0

    if bonus.get(user_id, 0) > 0 and video_list:
        bot.send_video(message.chat.id, video_list[index])
        users[user_id]['videos'] += 1
        bonus[user_id] -= 1
    elif not video_list:
        bot.send_message(message.chat.id, '”ò–∑—ñ—Ä–≥–µ –≤–∏–¥–µ–æ –∂–æ“õ.')
    else:
        bot.send_message(message.chat.id, '–ë–æ–Ω—É—Å –∂–µ—Ç—ñ—Å–ø–µ–π–¥—ñ. –ê–¥–∞–º —à–∞“õ—ã—Ä—ã–ø –∂–∏–Ω–∞“£—ã–∑.')

    save_json(USERS_FILE, users)
    save_json(BONUS_FILE, bonus)

# –§–æ—Ç–æ
@bot.message_handler(func=lambda m: m.text == 'üñº –§–æ—Ç–æ')
def send_photo(message):
    user_id = str(message.from_user.id)
    photos = load_json(PHOTOS_FILE)
    users = load_json(USERS_FILE)
    bonus = load_json(BONUS_FILE)

    photo_list = photos.get('all', [])
    index = users[user_id]['photos'] % len(photo_list) if photo_list else 0

    if bonus.get(user_id, 0) > 0 and photo_list:
        bot.send_photo(message.chat.id, photo_list[index])
        users[user_id]['photos'] += 1
        bonus[user_id] -= 1
    elif not photo_list:
        bot.send_message(message.chat.id, '”ò–∑—ñ—Ä–≥–µ —Ñ–æ—Ç–æ –∂–æ“õ.')
    else:
        bot.send_message(message.chat.id, '–ë–æ–Ω—É—Å –∂–µ—Ç—ñ—Å–ø–µ–π–¥—ñ. –ê–¥–∞–º —à–∞“õ—ã—Ä—ã–ø –∂–∏–Ω–∞“£—ã–∑.')

    save_json(USERS_FILE, users)
    save_json(BONUS_FILE, bonus)

# –ë–æ–Ω—É—Å
@bot.message_handler(func=lambda m: m.text == 'üéÅ –ë–æ–Ω—É—Å')
def check_bonus(message):
    user_id = str(message.from_user.id)
    bonus = load_json(BONUS_FILE)
    users = load_json(USERS_FILE)
    invited = users.get(user_id, {}).get('invited', [])
    ref_link = f'https://t.me/Darvinuyatszdaribot?start={user_id}'

    bot.send_message(
        message.chat.id,
        f'–°—ñ–∑–¥–µ {bonus.get(user_id, 0)} –±–æ–Ω—É—Å –±–∞—Ä.\n'
        f'–°—ñ–∑ {len(invited)} –∞–¥–∞–º —à–∞“õ—ã—Ä–¥—ã“£—ã–∑.\n'
        f'–®–∞“õ—ã—Ä—É —Å—ñ–ª—Ç–µ–º–µ“£—ñ–∑: {ref_link}'
    )

# –°–∞—Ç—ã–ø –∞–ª—É
@bot.message_handler(func=lambda m: m.text == 'üõí –°–∞—Ç—ã–ø –∞–ª—É')
def buy(message):
    text = ('450 –≤–∏–¥–µ–æ—Å—ã –±–∞—Ä –∞—Ä–∞–ª–∞—Å 500 —Ç–≥\n'
            '–î–µ—Ç—Å–∫–∏–π –∞—Ä–∞–ª–∞—Å 1000 —Ç–≥\n'
            '–ß–∏—Å—Ç–æ –¥–µ—Ç—Å–∫–∏–π 1500 —Ç–≥ + 2 –∫–∞–Ω–∞–ª\n'
            '2000 —Ç–≥ 5 –∫–∞–Ω–∞–ª\n'
            '2500 —Ç–≥ 10 –∫–∞–Ω–∞–ª\n'
            '3000 —Ç–≥ 20 –∫–∞–Ω–∞–ª (–±–∞—Ä–ª—ã“ì—ã–Ω –∞–ª—É)\n\n'
            '–ñ–∞–∑: @KazHubALU')
    bot.send_message(message.chat.id, text)

# –ê–¥–º–∏–Ω —Ö–∞–±–∞—Ä–ª–∞–º–∞
@bot.message_handler(func=lambda m: m.text == 'üì¢ –•–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—É')
def admin_broadcast(message):
    if message.from_user.id != ADMIN_ID:
        return
    msg = bot.send_message(message.chat.id, "–ñ—ñ–±–µ—Ä–µ—Ç—ñ–Ω —Ö–∞–±–∞—Ä–ª–∞–º–∞–Ω—ã –∂–∞–∑—ã“£—ã–∑:")
    bot.register_next_step_handler(msg, send_broadcast)

def send_broadcast(msg):
    users = load_json(USERS_FILE)
    for uid in users:
        try:
            bot.send_message(uid, msg.text)
        except:
            pass
    bot.send_message(msg.chat.id, "–•–∞–±–∞—Ä–ª–∞–º–∞ –∂—ñ–±–µ—Ä—ñ–ª–¥—ñ ‚úÖ")

# –§–æ—Ç–æ “õ–æ—Å—É
@bot.message_handler(content_types=['photo'])
def add_photo(message):
    if message.from_user.id != ADMIN_ID:
        return
    photos = load_json(PHOTOS_FILE)
    photo_id = message.photo[-1].file_id
    photos.setdefault('all', []).append(photo_id)
    save_json(PHOTOS_FILE, photos)
    bot.reply_to(message, "–§–æ—Ç–æ —Å–∞“õ—Ç–∞–ª–¥—ã ‚úÖ")

# –í–∏–¥–µ–æ “õ–æ—Å—É
@bot.message_handler(content_types=['video'])
def add_video(message):
    if message.from_user.id != ADMIN_ID:
        return
    videos = load_json(VIDEOS_FILE)
    video_id = message.video.file_id
    videos.setdefault('all', []).append(video_id)
    save_json(VIDEOS_FILE, videos)
    bot.reply_to(message, "–í–∏–¥–µ–æ —Å–∞“õ—Ç–∞–ª–¥—ã ‚úÖ")

# –ë–æ—Ç –±–∞—Å—Ç–∞–ª–¥—ã
print("ü§ñ –ë–æ—Ç —Å”ô—Ç—Ç—ñ —ñ—Å–∫–µ “õ–æ—Å—ã–ª–¥—ã!")
bot.polling(none_stop=True)
