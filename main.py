import asyncio
import json
import os
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.fsm.storage.memory import MemoryStorage
from aiohttp import web

API_TOKEN = '7748542247:AAGVgKPaOvHH7iDL4Uei2hM_zsI_6gCowkM'

# Railway —ñ—à—ñ–Ω–¥–µ–≥—ñ ”©–∑ –¥–æ–º–µ–Ω—ñ“£–¥—ñ WEBHOOK_HOST “õ—ã–ø “õ–æ–π
WEBHOOK_HOST = os.getenv("WEBHOOK_HOST", "https://nake-production.up.railway.app")
WEBHOOK_PATH = '/webhook'
WEBHOOK_URL = f"{WEBHOOK_HOST}{WEBHOOK_PATH}"

WEBAPP_HOST = '0.0.0.0'
WEBAPP_PORT = int(os.environ.get('PORT', 8000))

bot = Bot(token=API_TOKEN)
dp = Dispatcher(storage=MemoryStorage())
logging.basicConfig(level=logging.INFO)

# “ö–∞—Ä–∞–ø–∞–π—ã–º —Ö–µ–Ω–¥–ª–µ—Ä - –±–æ—Ç –∂–∞—É–∞–ø –±–µ—Ä—ñ–ø —Ç“±—Ä“ì–∞–Ω—ã–Ω —Ç–µ–∫—Å–µ—Ä–µ–¥—ñ
@dp.message()
async def echo_all(message: types.Message):
    await message.answer("ü§ñ –ë–æ—Ç –∂“±–º—ã—Å —ñ—Å—Ç–µ–ø —Ç“±—Ä!")

# Webhook –æ—Ä–Ω–∞—Ç—É –∂”ô–Ω–µ —Ç–∞–∑–∞–ª–∞—É
async def on_startup(app):
    await bot.set_webhook(WEBHOOK_URL)
    logging.info("‚úÖ Webhook –æ—Ä–Ω–∞—Ç—ã–ª–¥—ã")

async def on_shutdown(app):
    await bot.delete_webhook()
    logging.info("üßπ Webhook ”©—à—ñ—Ä—ñ–ª–¥—ñ")

# Webhook “õ–∞–±—ã–ª–¥–∞–π—Ç—ã–Ω —Ñ—É–Ω–∫—Ü–∏—è
async def handle_webhook(request):
    try:
        data = await request.json()
        update = types.Update(**data)
        await dp.feed_update(bot, update)
    except Exception as e:
        logging.exception("‚ùå Webhook error")
    return web.Response()

# AIOHTTP —Å–µ—Ä–≤–µ—Ä—ñ–Ω –æ—Ä–Ω–∞—Ç—É
app = web.Application()
app.on_startup.append(on_startup)
app.on_shutdown.append(on_shutdown)
app.router.add_post(WEBHOOK_PATH, handle_webhook)

if __name__ == '__main__':
    print("üöÄ Webhook —ñ—Å–∫–µ “õ–æ—Å—ã–ª—É–¥–∞...")
    web.run_app(app, host=WEBAPP_HOST, port=WEBAPP_PORT)
